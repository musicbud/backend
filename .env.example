# MusicBud Environment Configuration
# This is an example configuration file. Copy this to '.env' and fill in your actual values.
# IMPORTANT: Never commit your actual .env file to version control!

# ================ GENERAL APP SETTINGS ================
# The Django secret key used for cryptographic signing
SECRET_KEY=your_django_secret_key_here
# Debug mode (set to False in production)
DEBUG=True
# Allowed hosts for Django (comma-separated list)
ALLOWED_HOSTS=localhost,127.0.0.1

# ================ SPOTIFY API ================
# Register your app at https://developer.spotify.com/dashboard/ to get these credentials
SPOTIFY_CLIENT_ID=your_spotify_client_id
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret
# Redirect URI must match one registered in your Spotify app settings
SPOTIFY_REDIRECT_URI=http://127.0.0.1:8000/callback

# ================ LASTFM API ================
# Get your API key at https://www.last.fm/api/account/create
LASTFM_API_KEY=your_lastfm_api_key
LASTFM_API_SECRET=your_lastfm_shared_secret
# Your LastFM username (if required by the application)
LASTFM_USERNAME=your_lastfm_username

# ================ YOUTUBE MUSIC API ================
# YTMUSIC uses unofficial API - credentials format may vary
YTMUSIC_HEADERS=your_ytmusic_headers
# Or individual credentials if used separately
YTMUSIC_COOKIE=your_youtube_cookie
YTMUSIC_AUTH=your_youtube_auth_token

# ================ MYANIMELIST (MAL) API ================
# Register your app at https://myanimelist.net/apiconfig
MAL_CLIENT_ID=your_mal_client_id
MAL_CLIENT_SECRET=your_mal_client_secret
# Redirect URI must match one registered in your MAL app settings
MAL_REDIRECT_URI=http://127.0.0.1:8000/mal-callback

# ================ NEO4J DATABASE ================
# Neo4j database connection settings
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your_neo4j_password
# Database name if using Neo4j 4.0+
NEO4J_DATABASE=musicbud

# ================ ADDITIONAL SETTINGS ================
# Add any other environment-specific settings below
# E.g., EMAIL_HOST, EMAIL_PORT, etc.

# MusicBud Environment Configuration Example
# Rename this file to .env and fill in your actual credentials to use the application

# =============================================================================
# Spotify API Configuration
# =============================================================================
# Create a Spotify Developer account and register your application at:
# https://developer.spotify.com/dashboard/
SPOTIFY_CLIENT_ID=your_spotify_client_id_here
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here
# Callback URL configured in your Spotify application settings
SPOTIFY_REDIRECT_URI=http://localhost:3000/auth/spotify/callback
# Scopes required for your application (space-separated)
SPOTIFY_SCOPES=user-read-private user-read-email user-top-read user-library-read

# =============================================================================
# Last.fm API Configuration
# =============================================================================
# Register for a Last.fm API account at:
# https://www.last.fm/api/account/create
LASTFM_API_KEY=your_lastfm_api_key_here
LASTFM_SHARED_SECRET=your_lastfm_shared_secret_here
# Your registered Last.fm username (if needed)
LASTFM_USERNAME=your_lastfm_username

# =============================================================================
# YouTube Music API Configuration
# =============================================================================
# For YouTube Music API access:
# https://developers.google.com/youtube/v3/getting-started
YTMUSIC_CLIENT_ID=your_youtube_music_client_id_here
YTMUSIC_CLIENT_SECRET=your_youtube_music_client_secret_here
# API Key (if using API key authentication)
YTMUSIC_API_KEY=your_youtube_api_key_here

# =============================================================================
# MyAnimeList (MAL) API Configuration
# =============================================================================
# Register your application at:
# https://myanimelist.net/apiconfig
MAL_CLIENT_ID=your_mal_client_id_here
MAL_CLIENT_SECRET=your_mal_client_secret_here
# Callback URL configured in your MAL application settings
MAL_REDIRECT_URI=http://localhost:3000/auth/mal/callback

# =============================================================================
# Neo4j Database Configuration
# =============================================================================
# Neo4j connection details for your database
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your_database_password_here
# Database name (if using Neo4j 4.x+)
NEO4J_DATABASE=musicbud

# =============================================================================
# Application Configuration
# =============================================================================
# Application environment (development, testing, production)
NODE_ENV=development
# Application port
PORT=3000
# Secret key for session management and encryption
APP_SECRET=your_app_secret_key_here
# Logging level (debug, info, warn, error)
LOG_LEVEL=info

# MusicBud Environment Configuration Example
# Replace the placeholder values with your actual credentials
# DO NOT commit your actual .env file to version control

# Spotify API credentials
# Register your application at https://developer.spotify.com/dashboard/
SPOTIFY_CLIENT_ID=your_spotify_client_id_here
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here

# Last.fm API credentials
# Get your API key from https://www.last.fm/api/account/create
LASTFM_API_KEY=your_lastfm_api_key_here
LASTFM_SHARED_SECRET=your_lastfm_shared_secret_here

# YouTube Music API credentials
# Follow YouTube API documentation to obtain these
YTMUSIC_CLIENT_ID=your_ytmusic_client_id_here
YTMUSIC_CLIENT_SECRET=your_ytmusic_client_secret_here

# MyAnimeList (MAL) API credentials
# Register at https://myanimelist.net/apiconfig
MAL_CLIENT_ID=your_mal_client_id_here
MAL_CLIENT_SECRET=your_mal_client_secret_here

# Neo4j Database Configuration
# Update with your Neo4j instance details
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your_neo4j_password_here

# Application Settings
# Configure based on your deployment environment
DEBUG=False
LOG_LEVEL=INFO
PORT=8000

# Add any other environment variables your application uses below

